__author__ = 'm.lanton'
import maya.cmds as mc


# ----------------------------------------------------------------
def color(input_list, chosen_color):
    """Color input_list with the chosen color:
            'grey': 0, 'black': 1, 'dark_grey': 2, 'light_grey': 3, 'dark_red': 4, 'dark_blue': 5, 'blue': 6,
            'dark_green': 7, 'dark_violet': 8, 'pink': 9, 'maroon': 10, 'dark_maroon':11, 'purple': 12, 'red': 13,
            'green': 14, 'cobalt_blue': 15, 'white': 16, 'yellow': 17, 'cyan': 18, 'light_green': 19,
            'light_red': 20, 'light_maroon': 21, 'light_yellow': 22, 'desaturated_green': 23, 'maroon_2': 24,
            'light_kaki': 25, 'kaki': 26, 'light_desaturated_green': 27, 'turquoise': 28, 'light_cobalt_blue': 29,
            'dark_pink': 30, 'red_pink': 31"""
    colors = {'grey': 0, 'black': 1, 'dark_grey': 2, 'light_grey': 3, 'dark_red': 4, 'dark_blue': 5, 'blue': 6,
              'dark_green': 7, 'dark_violet': 8, 'pink': 9, 'maroon': 10, 'dark_maroon': 11, 'purple': 12, 'red': 13,
              'green': 14, 'cobalt_blue': 15, 'white': 16, 'yellow': 17, 'cyan': 18, 'light_green': 19,
              'light_red': 20, 'light_maroon': 21, 'light_yellow': 22, 'desaturated_green': 23, 'maroon_2': 24,
              'light_kaki': 25, 'kaki': 26, 'light_desaturated_green': 27, 'turquoise': 28, 'light_cobalt_blue': 29,
              'dark_pink': 30, 'red_pink': 31}
    for each in input_list:
        mc.setAttr(each + '.overrideEnabled', 1)
        mc.setAttr(each + '.overrideColor', colors[chosen_color])


# ----------------------------------------------------------------
def constrain_even():
    selection = mc.ls(sl=True)
    for i in range(0, len(selection)):
        if i % 2 == 0:
            mc.parentConstraint(selection[i], selection[i + 1], mo=True)
            mc.scaleConstraint(selection[i], selection[i + 1], mo=True)


# ----------------------------------------------------------------
def clean_pivot():
    selection = mc.ls(sl=True)
    print selection

    for node in selection:
        # freeze
        mc.makeIdentity(node, t=True, a=True)
        #get world space pivot position
        translate = mc.xform(node, q=True, sp=True, ws=True)
        #defines the opposite position
        opposite = [-translate[0], -translate[1], -translate[2]]
        #place the node at the center of the world
        mc.xform(node, t=opposite)
        #freeze
        mc.makeIdentity(node, t=True, a=True)
        #replace it a its original position
        mc.xform(node, t=translate)


# ----------------------------------------------------------------
def replace():
    """select objects to be replaced, select the one you want to place after,
    and then launch the function"""
    selection = mc.ls(sl=True, fl=True)
    object_to_duplicate = selection[-1]

    for i in range(0, len(selection) - 1):
        dup = mc.duplicate(object_to_duplicate)[0]
        t = mc.getAttr(selection[i] + '.translate')
        ro = mc.getAttr(selection[i] + '.rotate')
        s = mc.getAttr(selection[i] + '.scale')
        mc.setAttr(dup + '.translate', t[0][0], t[0][1], t[0][2], typ='double3')
        mc.setAttr(dup + '.rotate', ro[0][0], ro[0][1], ro[0][2], typ='double3')
        mc.setAttr(dup + '.scale', s[0][0], s[0][1], s[0][2], typ='double3')


# ----------------------------------------------------------------
def get_top_nodes():
    """Use current selection to select higher parent in hierarchy

    :return : list of the parents
    :rtype : list"""

    selection = mc.ls(sl=True, l=True)
    dictionary = dict()

    for node in selection:
        node_name = '|' + node.split('|')[1]
        dictionary[node_name] = node_name

    top_nodes = [key for key in dictionary]

    return top_nodes


# ----------------------------------------------------------------
def rig_set():
    """Create a rig set"""
    if mc.objExists('RIG_SET'):
        selection = mc.ls(et='nurbsCurve')
        controllers = list()
        print selection

        for node in selection:
            if 'ctrl' in mc.listRelatives(node, p=True)[0].lower():
                controllers.append(mc.listRelatives(node, p=True)[0])
            elif 'control' in mc.listRelatives(node, p=True)[0].lower():
                controllers.append(mc.listRelatives(node, p=True)[0])

        mc.sets(controllers, add='RIG_SET')
    else:
        print 'RIG_SET does\'nt exists'
        pass


# ----------------------------------------------------------------
# -------------------------CONTROLLERS----------------------------
# ----------------------------------------------------------------


# ---------------------CONTROLLERS CREATION-----------------------
def create_ctrl(ctrl_type='circle',
                name='ctrl',
                size=1.0,
                rotation=(0, 0, 0),
                normal=(1, 0, 0),
                sca=[1, 1, 1],
                node='default_node'):
    """"""
    ctrl_functions = {'pointer': create_pointer,
                      'quad_arrow': create_quad_arrow,
                      'orb': create_orb,
                      'circle': create_circle,
                      'simple_orb': create_simple_orb}

    ctrl = ctrl_functions[ctrl_type](name=name, size=size, normal=normal)

    mc.xform(ctrl, ro=rotation)
    mc.makeIdentity(ctrl, apply=True, r=True)
    mc.xform(ctrl, s=sca)
    mc.makeIdentity(ctrl, apply=True, s=True)

    if name != 'ctrl':
        ctrl = mc.rename(ctrl, name)
    elif node != 'default_node':
        ctrl = mc.rename(ctrl, node + '_ctrl')
    else:
        ctrl = mc.rename(ctrl, 'ctrl')

    if node != 'default_node':
        ct = mc.parentConstraint(node, ctrl, mo=False)
        mc.delete(ct)

    ctrl_orig = orig(ctrl)

    return [ctrl, ctrl_orig]


# ----------------------CONTROLLERS SHAPES------------------------
def create_pointer(name='ctrl', size=1.0, normal=(1, 0, 0), *args):
    """that function creates a 3 dimensional arrow controller

    :param size: scale according to the size of the controller you need (depends on deformed object scale)
    :type size: float

    :param name: name of the controller you need (depends on deformed object name)
    :type name: string

    :param rotation: angle of rotation)
    :type rotation: [float, float, float]"""

    sca = [size, size, size]
    # create pointer
    ctrl = mc.curve(d=1, p=[(0, 1.003235, 0), (0.668823, 0, 0), (0.334412, 0, 0), (0.334412, -0.167206, 0),
                            (0.334412, -0.501617, 0), (0.334412, -1.003235, 0), (-0.334412, -1.003235, 0),
                            (-0.334412, -0.501617, 0), (-0.334412, -0.167206, 0), (-0.334412, 0, 0),
                            (-0.668823, 0, 0), (0, 1.003235, 0), (0, 0, -0.668823), (0, 0, -0.334412),
                            (0, -0.167206, -0.334412), (0, -0.501617, -0.334412), (0, -1.003235, -0.334412),
                            (0, -1.003235, 0.334412), (0, -0.501617, 0.334412), (0, -0.167206, 0.334412),
                            (0, 0, 0.334412), (0, 0, 0.668823), (0, 1.003235, 0)],
                    k=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22])
    # place the pivot
    mc.xform(ctrl, t=[0, -1.0032, 0])
    mc.xform(ctrl, rp=[0, 0, 0], sp=[0, 0, 0], ws=True)
    mc.makeIdentity(ctrl, apply=True, t=True)
    mc.xform(ctrl, ro=[180, 0, 0], s=sca)
    mc.makeIdentity(ctrl, apply=True, s=True, r=True, t=True)
    mc.delete(ctrl, ch=True)

    return ctrl


# ----------------------------------------------------------------
def create_quad_arrow(name='ctrl', size=1.0, normal=(1, 0, 0)):
    """creates a quadruple arrow controller

    :param size: scale according to the size of the controller you need (depends on deformed object scale)
    :type size: float

    :param name: name of the controller you need (depends on deformed object name)
    :type name: string"""

    sca = [size, size, size]

    ctrl = mc.curve(p=[(0, 0.19576662954230162, 0.0027954042079433306),
                       (-0.065784892324127653, 0.14696216080819843, 0.06696638060355542),
                       (-0.018756837351674702, 0.14696216080819843, 0.06696638060355542),
                       (-0.018756837351674702, 0.098097834120707189, 0.10078637197619345),
                       (-0.018756837351674702, 0.019576733548265751, 0.12117536447541633),
                       (-0.097861666635238598, 0.019536828117540608, 0.10094130932112211),
                       (-0.14679259766151392, 0.019470318937865688, 0.067217818924988793),
                       (-0.14679259766151392, 0.065954613011673713, 0.067126142997310123),
                       (-0.19572352868778783, 0, 0.0031814077285579057),
                       (-0.14679259766151392, -0.065614915764414083, 0.067385623298024666),
                       (-0.14679259766151392, -0.019130621690606003, 0.067293947370347329),
                       (-0.097861666635238598, -0.019064112510931257, 0.10101743776647931),
                       (-0.018756837351674702, -0.019024207080206669, 0.12125149292077353),
                       (-0.018756837351674702, -0.097625118514098108, 0.10117237511140786),
                       (-0.018756837351674702, -0.14662246356093872, 0.067545385691779924),
                       (-0.065784892324127653, -0.14662246356093872, 0.067545385691779924),
                       (0, -0.19567966656116825, 0.0035674112491733689),
                       (0.065784892324127653, -0.14662246356093872, 0.067545385691779924),
                       (0.018756837351674702, -0.14662246356093872, 0.067545385691779924),
                       (0.018756837351674702, -0.097625118514098108, 0.10117237511140786),
                       (0.018756837351674702, -0.01902420708020678, 0.12125149292077353),
                       (0.097861666635238598, -0.019064112510931368, 0.10101743776647931),
                       (0.14679259766151392, -0.019130621690605892, 0.067293947370347329),
                       (0.14679259766151392, -0.065614915764414083, 0.067385623298024666),
                       (0.19572352868778783, 0, 0.0031814077285579057),
                       (0.14679259766151392, 0.065954613011673602, 0.067126142997310012),
                       (0.14679259766151392, 0.019470318937865688, 0.067217818924988793),
                       (0.097861666635238598, 0.019536828117540608, 0.10094130932112211),
                       (0.018756837351674702, 0.019576733548265668, 0.1211753644754161),
                       (0.018756837351674702, 0.098097834120707189, 0.10078637197619345),
                       (0.018756837351674702, 0.14696216080819843, 0.06696638060355542),
                       (0.065784892324127653, 0.14696216080819843, 0.06696638060355542),
                       (0, 0.19576662954230162, 0.0027954042079433306)], degree=1)

    mc.xform(ctrl, ro=[-90, 0, 0])
    mc.makeIdentity(ctrl, apply=True, r=True)
    mc.xform(ctrl, s=sca)
    mc.makeIdentity(ctrl, apply=True, s=True)
    mc.delete(ctrl, ch=True)

    return ctrl


# ----------------------------------------------------------------
def create_orb(name='ctrl', size=1.0, normal=(1, 0, 0), *args):
    """creates a quadruple arrow controler

    :param size: scale according to the size of the controller you need (depends on deformed object scale)
    :type size: float

    :param name: name of the controller you need (depends on deformed object name)
    :type name: string"""

    ctrl = mc.circle(nr=[0, 1, 0], r=size, ch=False, n=name)[0]

    circle_list = list()
    circle_list.append(mc.circle(nr=[1, 0, 1], r=size, ch=False)[0])
    circle_list.append(mc.circle(nr=[0, 0, 1], r=size, ch=False)[0])
    circle_list.append(mc.circle(nr=[1, 0, -1], r=size, ch=False)[0])
    circle_list.append(mc.circle(nr=[1, 0, 0], r=size, ch=False)[0])

    children = mc.listRelatives(circle_list, c=True)
    mc.parent(children, ctrl, r=True, s=True)
    mc.delete(circle_list)

    return ctrl


# ----------------------------------------------------------------
def create_circle(name='ctrl', size=2.0, normal=(1, 0, 0)):
    """Creates a circle controller for every selected node.

    :return: ctrl
    """
    # creates circle
    ctrl = mc.circle(normal=normal, radius=float(size) / 2, constructionHistory=False, name=name)

    return ctrl


# ----------------------------------------------------------------
def create_simple_orb(name='ctrl', size=1.0, normal=(1, 0, 0)):
    ctrl = mc.curve(p=[(0, 1, 0), (0, 0.92388, 0.382683), (0, 0.707107, 0.707107), (0, 0.382683, 0.92388),
                       (0, 0, 1), (0, -0.382683, 0.92388), (0, -0.707107, 0.707107), (0, -0.92388, 0.382683),
                       (0, -1, 0), (0, -0.92388, -0.382683), (0, -0.707107, -0.707107), (0, -0.382683, -0.92388),
                       (0, 0, -1), (0, 0.382683, -0.92388), (0, 0.707107, -0.707107), (0, 0.92388, -0.382683),
                       (0, 1, 0),
                       (0.382683, 0.92388, 0), (0.707107, 0.707107, 0), (0.92388, 0.382683, 0), (1, 0, 0),
                       (0.92388, -0.382683, 0), (0.707107, -0.707107, 0), (0.382683, -0.92388, 0), (0, -1, 0),
                       (-0.382683, -0.92388, 0), (-0.707107, -0.707107, 0), (-0.92388, -0.382683, 0), (-1, 0, 0),
                       (-0.92388, 0.382683, 0), (-0.707107, 0.707107, 0), (-0.382683, 0.92388, 0), (0, 1, 0),
                       (0, 0.92388, -0.382683), (0, 0.707107, -0.707107), (0, 0.382683, -0.92388), (0, 0, -1),
                       (-0.382683, 0, -0.92388), (-0.707107, 0, -0.707107), (-0.92388, 0, -0.382683), (-1, 0, 0),
                       (-0.92388, 0, 0.382683), (-0.707107, 0, 0.707107), (-0.382683, 0, 0.92388), (0, 0, 1),
                       (0.382683, 0, 0.92388), (0.707107, 0, 0.707107), (0.92388, 0, 0.382683), (1, 0, 0),
                       (0.92388, 0, -0.382683), (0.707107, 0, -0.707107), (0.382683, 0, -0.92388), (0, 0, -1)],
                    k=[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26,
                       27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
                       51, 52],
                    d=1)
    mc.xform(ctrl, s=[size, size, size])
    mc.makeIdentity(ctrl, apply=True, s=True)

    return ctrl


def create_set_range(name, old_min, old_max, mini, maxi):
    """
    Create a set range and set it with the given values.
    :param name: name to give to the created set range node
    :type name: str

    :param old_min: input minimal value
    :type old_min: float

    :param old_max: input maximal value
    :type old_max: float

    :param mini: output value of the old_min
    :type mini: float

    :param maxi: output value of the old_max
    :type maxi: float

    :return: name of the created set range
    :rtype: str
    """
    # --- Create set range node
    s_range = mc.createNode('setRange', n=name)
    # --- Set the sr node
    mc.setAttr(s_range + '.oldMinX', old_min)
    mc.setAttr(s_range + '.oldMaxX', old_max)
    mc.setAttr(s_range + '.minX', mini)
    mc.setAttr(s_range + '.maxX', maxi)

    return s_range


def create_condition(name, first_term=0.0, second_term=0.0, operation='equal',
                     cit_r=0.0, cit_g=0.0, cit_b=0.0,
                     cif_r=1.0, cif_g=1.0, cif_b=1.0,
                     out_color_r='', out_color_g='', out_color_b=''):
    """
    create a condition node with the specified connexions
    :rtype : object

    :param name: name of the node
    :type name: str

    :param first_term: attr/value to connect/set to firstTerm (str/int/float)
    :type first_term: str or int or float

    :param second_term: attr/value to connect/set to secondTerm (str/int/float)
    :type second_term: str or int or float

    :param operation: attr/value to connect/set to operation (str/int/float)
    :type operation: str or int or float

    :param cit_r: attr/value to connect/set to colorIfTrueR (str/int/float)
    :type cit_r: str or int or float

    :param cit_g: attr/value to connect/set to colorIfTrueG (str/int/float)
    :type cit_g: str or int or float

    :param cit_b: attr/value to connect/set to colorIfTrueB (str/int/float)
    :type cit_b: str or int or float

    :param cif_r: attr/value to connect/set to colorIfFalseR (str/int/float)
    :type cif_r: str or int or float

    :param cif_g: attr/value to connect/set to colorIfFalseG (str/int/float)
    :type cif_g: str or int or float

    :param cif_b: attr/value to connect/set to colorIfFalseB (str/int/float)
    :type cif_b: str or int or float

    :param out_color_r: attr/value to connect/set outColorR to (str)
    :type out_color_r: str

    :param out_color_g: attr/value to connect/set outColorG to (str)
    :type out_color_g: str

    :param out_color_b: attr/value to connect/set outColorB to (str)
    :type out_color_b: str

    :return: name of the condition node created
    """
    operation_dict = {'equal': 0,
    'not equal': 1,
    'greater than': 2,
    'greater or equal': 3,
    'less than': 4,
    'less or equal': 5}

    input_connexions = {'firstTerm': first_term,
    'secondTerm': second_term,
    'colorIfTrueR': cit_r,
    'colorIfTrueG': cit_g,
    'colorIfTrueB': cit_b,
    'colorIfFalseR': cif_r,
    'colorIfFalseG': cif_g,
    'colorIfFalseB': cif_b}
    output_connexions = {'outColorR': out_color_r,
    'outColorG': out_color_g,
    'outColorB': out_color_b}

    condition_node = mc.createNode('condition', n=name)

    if operation not in operation_dict:
        mc.connectAttr(operation, '%s.operation' % condition_node)
    else:
        mc.setAttr('%s.operation' % condition_node, operation_dict[operation])

    for input_value in input_connexions:
        attr_value = input_connexions[input_value]
        if type(attr_value) is str or type(attr_value) is unicode:
            mc.connectAttr(attr_value, '%s.%s' % (condition_node, input_value))
        else:
            mc.setAttr('%s.%s' % (condition_node, input_value), attr_value)

    for output_value in output_connexions:
        if output_connexions[output_value] is not '':
            mc.connectAttr('%s.%s' % (condition_node, output_value),
                           output_connexions[output_value], f=True)

    return condition_node


def connect_one_to_many(attr, *args):
    """
    Connect one node.attribute to several node.attribute
    :param attr: node and attribute to connect from
    :type attr: str

    :param args: node(s) and attribute(s) to connect to
    :type args: str, str, str...

    :return:
    """
    for arg in args:
        mc.connectAttr(attr, arg)


def history_on_off(state=0):
    # --- List all nodes in the scene by long path
    all_nodes = mc.ls(l=True)

    for node in all_nodes:
        mc.setAttr(node + '.isHistoricallyInteresting', state)

    print '\n## HISTORY HIDDEN ##\n',


def set_hidden_as_intermediate(hidden_geo):
    if not hidden_geo or type(hidden_geo) != list:
        hidden_geo = mc.ls(sl=True)

    for geo in hidden_geo:
        shape = mc.listRelatives(geo, c=True, s=True)[0]
    mc.setAttr(shape + '.intermediateObject', 1)

# ----------------------------------------------------------------
curve_shape = {
            "square" :
                {
                    "degree" : 1,
                    "point" : [[-1, 0, 1],[-1, 0, -1],[1, 0, -1],[1, 0, 1],[-1, 0, 1]],
                    "knot" : [0, 1, 2, 3, 4]
                },
            "circle" :
                {
                    "degree" : 3,
                    "point" : [[0.78361162489122504, 4.7982373409884682e-017, -0.78361162489122382], [-1.2643170607829326e-016, 6.7857323231109134e-017, -1.1081941875543879], [-0.78361162489122427, 4.7982373409884713e-017, -0.78361162489122427], [-1.1081941875543879, 1.9663354616187859e-032, -3.2112695072372299e-016], [-0.78361162489122449, -4.7982373409884694e-017, 0.78361162489122405], [-3.3392053635905195e-016, -6.7857323231109146e-017, 1.1081941875543881], [0.78361162489122382, -4.7982373409884719e-017, 0.78361162489122438], [1.1081941875543879, -3.6446300679047921e-032, 5.9521325992805852e-016], [0.78361162489122504, 4.7982373409884682e-017, -0.78361162489122382], [-1.2643170607829326e-016, 6.7857323231109134e-017, -1.1081941875543879], [-0.78361162489122427, 4.7982373409884713e-017, -0.78361162489122427]],
                    "knot" : [-2, -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
                },
            "circle_low" :
                {
                    "degree" : 1,
                    "point" : [[6.123233995736766e-017, 6.123233995736766e-017, -1], [-0.70710678118654746, 4.329780281177467e-017, -0.70710678118654757], [-1, 1.7345710191123555e-032, -2.8327694488239898e-016], [-0.70710678118654768, -4.3297802811774652e-017, 0.70710678118654735], [-3.3878809611365681e-016, -6.123233995736766e-017, 1], [0.70710678118654724, -4.3297802811774683e-017, 0.70710678118654779], [1, -3.0942020925592465e-032, 5.0532154980743029e-016], [0.70710678118654791, 4.329780281177464e-017, -0.70710678118654713], [7.273661547324616e-016, 6.123233995736766e-017, -1]],
                    "knot" : [0, 1, 2, 3, 4, 5, 6, 7, 8]
                },
            "triangle" :
                {
                    "degree" : 1,
                    "point" : [[-0.86602544763176303, 0, 0.49999995673650394], [0, 0, -1], [0.8660254037844386, 0, 0.50000000000000011], [-0.86602544763176303, 0, 0.49999995673650394]],
                    "knot" : [0, 1, 2, 3]
                },
            "arrow_eating_snake" :
                {
                    "degree" : 3,
                    "point" : [[0.0004828479679154593, 1.4625465440802545e-16, -0.582882440275436], [0.0004828479679154593, 1.4625465440802545e-16, -0.582882440275436], [0.27844032843035166, -7.312732720401273e-16, -0.2691235168246579], [0.2784925474122084, 4.3876396322407633e-16, -0.26593995575694424], [0.2784925474122084, 4.3876396322407633e-16, -0.26593995575694424], [0.2759607011006678, -7.312732720401273e-16, -0.42029546136485224], [0.2759607011006678, -7.312732720401273e-16, -0.42029546136485224], [0.2759607011006678, -7.312732720401273e-16, -0.42029546136485224], [0.3860903179649898, 4.3876396322407633e-16, -0.40747785795251107], [0.48903777505482715, -4.3876396322407633e-16, -0.36631179733634006], [0.5776409615349594, -4.3876396322407633e-16, -0.29966122484453367], [0.6457357053134926, 4.3876396322407633e-16, -0.21216305721998185], [0.6885846178620991, -4.3876396322407633e-16, -0.10990458978906341], [0.7032066769242129, 4.3876396322407633e-16, 3.5101117057926106e-15], [0.6885846178620991, 1.0237825808561781e-15, 0.10990458978906692], [0.6457357053134926, 4.3876396322407633e-16, 0.21216305721998419], [0.5776409615349594, -1.4625465440802545e-16, 0.29966122484453717], [0.48903777505482715, 4.3876396322407633e-16, 0.3663117973363412], [0.3860903179649898, -4.3876396322407633e-16, 0.4074778579525134], [0.2759607011006679, -1.0237825808561781e-15, 0.42029546136485224], [0.2759607011006679, -1.0237825808561781e-15, 0.42029546136485224], [0.2759607011006679, -1.0237825808561781e-15, 0.42029546136485224], [0.2784925474122085, -1.4625465440802545e-16, 0.26593995575694773], [0.2784925474122085, -1.4625465440802545e-16, 0.26593995575694773], [0.2784925474122085, -1.4625465440802545e-16, 0.26593995575694773], [0.27844032843035177, -1.4625465440802545e-16, 0.26912351682465907], [0.00048284796791713794, -7.312732720401273e-16, 0.5828824402754383], [0.0004828479679167347, -7.312732720401273e-16, 0.5828824402754383], [0.0004828479679167347, -7.312732720401273e-16, 0.5828824402754383], [0.0004828479679167347, -7.312732720401273e-16, 0.5828824402754383], [0.00048284796791713794, -7.312732720401273e-16, 0.5828824402754383], [0.2685218191116169, 4.3876396322407633e-16, 0.8738112949854353], [0.26846960012975984, 1.0237825808561781e-15, 0.8769948560531466], [0.26846960012975984, 1.0237825808561781e-15, 0.8769948560531466], [0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [0.46035394274753816, -4.3876396322407633e-16, 0.7006012713899035], [0.6373577183291387, -4.3876396322407633e-16, 0.6298219791095238], [0.7896985238126378, 1.4625465440802545e-16, 0.5152256276384066], [0.9067779261289474, 4.3876396322407633e-16, 0.36478474775827513], [0.9804506472924318, -1.901310507304331e-15, 0.18896559367595772], [1.0055912358405525, 4.3876396322407633e-16, 3.5101117057926106e-15], [0.9804506472924308, 1.0237825808561781e-15, -0.18896559367595422], [0.9067779261289483, 1.0237825808561781e-15, -0.3647847477582693], [0.7896985238126383, 4.3876396322407633e-16, -0.5152256276384043], [0.6373577183291387, -7.312732720401273e-16, -0.6298219791095214], [0.46035394274753816, 1.901310507304331e-15, -0.7006012713898988], [0.27100144644130064, 1.60880119848828e-15, -0.7226393504452385], [0.27100144644130064, 1.60880119848828e-15, -0.7226393504452385], [0.27100144644130064, 1.60880119848828e-15, -0.7226393504452385], [0.26846960012975984, 4.3876396322407633e-16, -0.8769948560531466], [0.26846960012975984, 4.3876396322407633e-16, -0.8769948560531466], [0.26846960012975984, 4.3876396322407633e-16, -0.8769948560531466], [0.2685200784788885, -1.4625465440802545e-16, -0.8739174136876909], [0.013884796525100997, -1.4625465440802545e-16, -0.5974288830109352], [-0.0008573468878030887, 1.4625465440802545e-16, -0.5814277960018865], [-0.014380721991036965, -1.0237825808561781e-15, -0.567194494102897], [-0.27844206906307983, -4.3876396322407633e-16, -0.26901739812239994], [-0.2784925474122084, 4.3876396322407633e-16, -0.26593995575694424], [-0.2784925474122084, 4.3876396322407633e-16, -0.26593995575694424], [-0.2759607011006678, -7.312732720401273e-16, -0.42029546136485224], [-0.2759607011006678, -7.312732720401273e-16, -0.42029546136485224], [-0.2759607011006678, -7.312732720401273e-16, -0.42029546136485224], [-0.3860903179649897, 4.3876396322407633e-16, -0.40747785795251107], [-0.48903777505482715, -4.3876396322407633e-16, -0.36631179733634006], [-0.5776409615349594, -4.3876396322407633e-16, -0.29966122484453367], [-0.6457357053134926, 4.3876396322407633e-16, -0.21216305721998185], [-0.688584617862099, 4.3876396322407633e-16, -0.10990458978906341], [-0.7032066769242121, -1.316291889672229e-15, 2.3400744705284072e-15], [-0.688584617862099, 1.0237825808561781e-15, 0.10990458978906692], [-0.645735705313492, 4.3876396322407633e-16, 0.21216305721998419], [-0.5776409615349594, -7.312732720401273e-16, 0.29966122484453367], [-0.48903777505482715, 4.3876396322407633e-16, 0.3663117973363412], [-0.3860903179649897, -4.3876396322407633e-16, 0.4074778579525134], [-0.2759607011006679, -4.3876396322407633e-16, 0.42029546136485224], [-0.2759607011006679, -4.3876396322407633e-16, 0.42029546136485224], [-0.2759607011006679, -4.3876396322407633e-16, 0.42029546136485224], [-0.2784925474122085, -1.4625465440802545e-16, 0.26593995575694773], [-0.2784925474122085, -1.4625465440802545e-16, 0.26593995575694773], [-0.2784925474122085, -1.4625465440802545e-16, 0.26593995575694773], [-0.27844032843035177, -1.4625465440802545e-16, 0.26912351682465907], [-0.0004828479679167061, -7.312732720401273e-16, 0.5828824402754383], [-0.0004828479679163019, -7.312732720401273e-16, 0.5828824402754383], [-0.0004828479679163019, -7.312732720401273e-16, 0.5828824402754383], [-0.0004828479679163019, -7.312732720401273e-16, 0.5828824402754383], [-0.0004828479679167061, -7.312732720401273e-16, 0.5828824402754383], [-0.2685218191116171, 4.3876396322407633e-16, 0.8738112949854353], [-0.26846960012975984, 1.0237825808561781e-15, 0.8769948560531466], [-0.26846960012975984, 1.0237825808561781e-15, 0.8769948560531466], [-0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [-0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [-0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [-0.27100144644130064, -1.316291889672229e-15, 0.7226393504452421], [-0.46035394274753816, -4.3876396322407633e-16, 0.7006012713899035], [-0.6373577183291381, 7.312732720401273e-16, 0.6298219791095226], [-0.7896985238126378, 1.4625465440802545e-16, 0.5152256276384066], [-0.9067779261289474, 1.0237825808561781e-15, 0.36478474775827513], [-0.9804506472924318, -1.901310507304331e-15, 0.18896559367595772], [-1.0055912358405525, -1.316291889672229e-15, 2.3400744705284072e-15], [-0.9804506472924318, -1.316291889672229e-15, -0.18896559367595656], [-0.9067779261289483, 1.0237825808561781e-15, -0.3647847477582693], [-0.7896985238126383, 4.3876396322407633e-16, -0.5152256276384043], [-0.6373577183291387, -7.312732720401273e-16, -0.6298219791095214], [-0.46035394274753816, 1.901310507304331e-15, -0.7006012713898988], [-0.27100144644130064, 1.60880119848828e-15, -0.7226393504452385], [-0.27100144644130064, 1.60880119848828e-15, -0.7226393504452385], [-0.27100144644130064, 1.60880119848828e-15, -0.7226393504452385], [-0.26846960012975984, 4.3876396322407633e-16, -0.8769948560531466], [-0.26846960012975984, 4.3876396322407633e-16, -0.8769948560531466], [-0.26846960012975984, 4.3876396322407633e-16, -0.8769948560531466], [-0.2685218191116169, 4.3876396322407633e-16, -0.8738112949854329], [-0.00048284796791529507, 1.4625465440802545e-16, -0.582882440275436], [-0.0004828479679150264, 1.4625465440802545e-16, -0.582882440275436]],
                    "knot" : [0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 55, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 110, 110]
                },
            "mouth_back" :
                {
                    "degree" : 3,
                    "point" : [[0.344499166059, 0.0166208938389, -0.703680292209], [0.899525578734, 0.0166208938389, -0.578620198692], [1.08134460415, 0.0166208938389, 0.080548116737], [0.861247869922, 0.0166208938389, 0.443415550675], [0.449761900974, 0.0166208938389, 0.701281807934], [-0.449761900974, 0.0166208938389, 0.703972691203], [-0.861247869922, 0.0166208938389, 0.445090199374], [-1.08134460415, 0.0166208938389, 0.0806816160759], [-0.880386736175, 0.0166208938389, -0.579510154883], [-0.344499166059, 0.0166208938389, -0.703972691203]],
                    "knot" : [0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 7, 7]
                },
            "glottis" :
                {
                    "degree" : 3,
                    "point" : [[0.28917412685609173, -1.3603670273929365e-16, -0.3811674799988158], [0.17924016127443804, -1.550993494531818e-16, -0.3930836314608004], [0.0645264580587977, -5.025479252679696e-17, -0.3190308907570108], [0.04540750752285601, -6.455177756221308e-17, -0.16852890200784335], [0.04540750752285601, -7.88487625976292e-17, 0.032259909767101205], [0.22225779998030315, -7.88487625976292e-17, 0.1159252339356399], [0.18401989890842224, -1.0744273266846142e-16, 0.30949796958742304], [-0.011949344084964161, -7.88487625976292e-17, 0.3931500167067564], [-0.17924016127443804, -6.931743924068512e-17, 0.30951124663661433], [-0.21269832471233477, -6.931743924068512e-17, 0.11592523393561123], [-0.021508819352932564, -7.646593175839318e-17, 0.03229974091467502], [-0.031068294620903405, -7.408310091915716e-17, -0.16840940856512213], [-0.04540750752285845, -5.025479252679696e-17, -0.3190308907570108], [-0.16012121073849878, -1.169740560254055e-16, -0.3931500167067565], [-0.28917412685609417, -1.3603670273929365e-16, -0.3811674799988158]],
                    "knot" : [0, 0, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 12, 12]
                },
            "circle_wired" :
                {
                    "degree" : 3,
                    "point" : [[0.3155976385060017, -2.6634825682896488e-05, -1.1775642872766905], [5.36835977625231e-16, -1.836407503647267e-05, -0.811917719337547], [-0.3155976385060025, -2.6634825682896488e-05, -1.1775642872766905], [-0.4052881852502264, -1.5879871361360367e-05, -0.7020920715021007], [-0.8636087791756006, -1.9532986113257564e-05, -0.8635948090917185], [-0.7017092568322906, -9.162191700851114e-06, -0.4051061487806655], [-1.1785826518073288, -7.143869836610244e-06, -0.31587694889438434], [-0.8111529572662252, 1.0409880324818e-09, -3.307801710043138e-06], [-1.178582057333354, 7.144849399673032e-06, 0.3158215960559915], [-0.7017053394149197, 9.164275353144405e-06, 0.40509960728471994], [-0.8636110775207235, 1.9533901102681334e-05, 0.8635366014810284], [-0.4052814407414844, 1.5882056057224385e-05, 0.7020899971112969], [-0.3155934801079058, 2.6634825673373175e-05, 1.1774656279342057], [1.3192370737182166e-15, 1.8368164007230154e-05, 0.8119998321815151], [0.31559348010790667, 2.6634825673165638e-05, 1.1774656279342026], [0.40528144074148714, 1.5882056057224385e-05, 0.7020899971112974], [0.8636110775207212, 1.953390110242191e-05, 0.8635366014810262], [0.7017053394149217, 9.164275353105492e-06, 0.40509960728472105], [1.1785820573333516, 7.144849399698974e-06, 0.3158215960559899], [0.811152957266227, 1.0409880324802167e-09, -3.307801710044309e-06], [1.1785826518073292, -7.143869836610244e-06, -0.3158769488943856], [0.70170925683229, -9.162191700851114e-06, -0.40510614878066503], [0.8636087791756016, -1.9532986113153796e-05, -0.8635948090917193], [0.40528818525022714, -1.5879871361360367e-05, -0.7020920715021007], [0.3155976385060017, -2.6634825682896488e-05, -1.1775642872766905], [5.36835977625231e-16, -1.836407503647267e-05, -0.811917719337547], [-0.3155976385060025, -2.6634825682896488e-05, -1.1775642872766905]],
                    "knot" : [-0.08333333333333333, -0.041666666666666664, 0.0, 0.041666666666666664, 0.08333333333333333, 0.125, 0.16666666666666666, 0.20833333333333337, 0.25, 0.2916666666666667, 0.3333333333333333, 0.375, 0.41666666666666674, 0.45833333333333326, 0.5, 0.5416666666666666, 0.5833333333333334, 0.625, 0.6666666666666666, 0.7083333333333334, 0.75, 0.7916666666666665, 0.8333333333333335, 0.875, 0.9166666666666665, 0.9583333333333335, 1.0, 1.0416666666666667, 1.0833333333333333]
                },
            "sparkle" :
                {
                    "degree" : 3,
                    "point" : [[0.0, 0.0, 0.0], [0.0, -2.4069722830413547e-16, -1.4863536929672807], [0.0, 0.0, 0.0], [-1.486353692967282, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, 2.4069722830413547e-16, 1.4863536929672807], [0.0, 0.0, 0.0], [1.486353692967282, 0.0, 0.0], [0.0, 0.0, 0.0], [0.0, -2.4069722830413547e-16, -1.4863536929672807], [0.0, 0.0, 0.0]],
                    "knot" : [-2.0, -1.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0]
                },
            "eye" :
                {
                    "degree" : 3,
                    "point" : [[-0.9988434026484145, -7.14609002959437e-19, 0.0020947713837464917], [-0.7491325519863123, 1.1433744047350992e-17, -0.24761607927835344], [-0.24971085066210216, -4.573497618940397e-17, -0.49732692994046596], [0.24971085066210216, -4.573497618940397e-17, -0.49732692994046596], [0.7491325519863123, 1.1433744047350992e-17, -0.24761607927835344], [0.9988434026484145, -7.14609002959437e-19, 0.0020947713837464917], [0.9988434026484145, -7.14609002959437e-19, 0.0020947713837464917], [0.9988434026484145, -7.14609002959437e-19, 0.0020947713837464917], [0.7491325519863123, -1.1433744047350992e-17, 0.2518056220458515], [0.24971085066210216, -2.2867488094701984e-17, 0.501516472707956], [-0.24971085066210216, -2.2867488094701984e-17, 0.501516472707956], [-0.7491325519863123, -1.1433744047350992e-17, 0.2518056220458515], [-0.9988434026484145, -7.14609002959437e-19, 0.0020947713837464917], [-0.9988434026484145, -7.14609002959437e-19, 0.0020947713837464917], [-0.9988434026484145, -7.14609002959437e-19, 0.0020947713837464917], [-0.7491325519863123, -1.1433744047350992e-17, 0.2518056220458515], [-0.24971085066210216, -2.2867488094701984e-17, 0.501516472707956], [0.24971085066210216, -2.2867488094701984e-17, 0.501516472707956], [0.5066346668252266, 0.0, 0.2316357963109097], [0.515810053569918, 0.0, -0.12234816986672509], [0.3478587705075508, -1.1433744047350992e-17, -0.40822500395197153], [-0.00573603649943877, 2.2867488094701984e-17, -0.5305053717085413], [-0.3634654546735315, -1.1433744047350992e-17, -0.38229305645551886], [-0.5487243798801916, -2.858436011837748e-18, 0.08355112916194155], [-0.3331333606340511, -2.2867488094701984e-17, 0.45697500807627184], [-0.097055778847701, 0.0, 0.48131063576697947]],
                    "knot" : [0.0, 0.0, 0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 23.0, 23.0]
                },
            "bol" :
                {
                    "degree" : 1,
                    "point" : [[-0.4538089266629602, -0.17785854478527593, 1.4630345076076976e-07], [-0.4450886120755319, -0.17785854478527593, 0.08706561458110529], [-0.4192643490471528, -0.1778585447852759, 0.1707854289158149], [-0.377328001964125, -0.1778585447852759, 0.24794206382938586], [-0.32089113090435767, -0.17785854478527588, 0.3155704340399182], [-0.25212258905845464, -0.17785854478527588, 0.37107160495954056], [-0.17366508986656967, -0.17785854478527588, 0.41231273823146086], [-0.08853372530936564, -0.17785854478527588, 0.4377089155523162], [-5.3849611878825946e-08, -0.17785854478527588, 0.4462841862727711], [0.08853362456971503, -0.17785854478527588, 0.4377089952556589], [0.17366502282063265, -0.17785854478527588, 0.4123129244898066], [0.2521225896845202, -0.17785854478527588, 0.3710718974723113], [0.3208912397259462, -0.17785854478527588, 0.31557077985523857], [0.37732821898123636, -0.1778585447852759, 0.24794246284706323], [0.41926470118060916, -0.1778585447852759, 0.17078584120903342], [0.4450890725752563, -0.17785854478527593, 0.08706601364887907], [0.4538089272321107, -0.17785854478527593, 2.926068994466487e-07], [0.4450891805431191, -0.17785854478527593, -0.08706544831121556], [0.4192648904231729, -0.17785854478527593, -0.1707853092355598], [0.3773284895554164, -0.17785854478527593, -0.24794198412604315], [0.32089156436943017, -0.17785854478527596, -0.31557038088765754], [0.2521229413626562, -0.17785854478527596, -0.37107160495954067], [0.17366537455568368, -0.17785854478527596, -0.4123127382314609], [0.08853395587226064, -0.17785854478527596, -0.4377089155523162], [2.2346501830888288e-07, -0.17785854478527596, -0.4462841862727711], [-0.0885335224641032, -0.17785854478527596, -0.4377089952556589], [-0.17366496818217825, -0.17785854478527596, -0.41231287128744976], [-0.25212256196688765, -0.17785854478527596, -0.37107179111769373], [-0.32089123909988065, -0.17785854478527596, -0.31557062019807125], [-0.377328245446738, -0.17785854478527593, -0.24794222348655323], [-0.4192647276461105, -0.17785854478527593, -0.17078552204498776], [-0.4450890990976729, -0.17785854478527593, -0.08706563451946503], [-0.4538089266629602, -0.17785854478527593, 1.4630345076076976e-07], [-0.5809498588976953, -0.1422868272365804, 2.2041910662436005e-07], [-0.6897002820443042, -0.10671512044812806, 2.2041910672139189e-07], [-0.7701674216697861, -0.0711434135217239, 2.204191067170356e-07], [-0.844214592973848, -0.03557170397423487, 2.2041910671267933e-07], [-0.9107612732787644, 5.31114567505045e-09, 2.2041910675743293e-07], [-0.9557161670294876, 0.035571714803453995, 2.2041910675307664e-07], [-0.9873663671665805, 0.07114342428196711, 2.2041910674872037e-07], [-1.0046936337281203, 0.10671513112560016, 2.2041910674436408e-07], [-1.0077665903363877, 0.14228683794164285, 2.2041910669089793e-07], [-1.0063481618281584, 0.17785854478527593, 3.2443656167322446e-07], [-0.9870103486884023, 0.17785854478527593, 0.19307315493024882], [-0.9297435158618391, 0.17785854478527596, 0.37872679957872657], [-0.8367471838514654, 0.177858544785276, 0.5498262052100971], [-0.7115950803768287, 0.177858544785276, 0.6997961200770524], [-0.5590967680326215, 0.177858544785276, 0.822873251926031], [-0.3851126186752208, 0.177858544785276, 0.9143279067120024], [-0.19632877777643012, 0.17785854478527605, 0.9706454335337019], [-1.1961154510385232e-07, 0.17785854478527605, 0.9896616040926537], [0.1963285534741912, 0.17785854478527605, 0.9706456108748919], [0.3851124692162816, 0.177858544785276, 0.9143283205081123], [0.559096768544857, 0.177858544785276, 0.8228739011751331], [0.7115953205583684, 0.177858544785276, 0.699796887052651], [0.8367476642145446, 0.177858544785276, 0.5498270899121919], [0.9297442961672677, 0.17785854478527596, 0.37872771393787896], [0.9870113691753708, 0.17785854478527593, 0.19307403968243983], [1.0063481623973087, 0.17785854478527593, 6.48873120363023e-07], [1.0077665903363877, 0.14228683794164285, 4.4083821059282956e-07], [1.0046936337281203, 0.10671513112560016, 4.4083821064708774e-07], [0.9873663671665805, 0.07114342428196711, 4.40838210651444e-07], [0.9557161681677887, 0.035571714803453995, 4.408382106558003e-07], [0.9107612732787644, 5.311145675050475e-09, 4.408382107100585e-07], [0.844214592973848, -0.03557170397423487, 4.4083821086491274e-07], [0.7701674222389367, -0.0711434135217239, 4.40838210919171e-07], [0.689700283182605, -0.10671512044812806, 4.4083821092352726e-07], [0.5809498588976953, -0.1422868272365804, 4.4083821097778555e-07], [0.4538089272321107, -0.17785854478527593, 2.926068994466487e-07], [0.5809498588976953, -0.1422868272365804, 4.4083821097778555e-07], [0.689700283182605, -0.10671512044812806, 4.4083821092352726e-07], [0.7701674222389367, -0.0711434135217239, 4.40838210919171e-07], [0.844214592973848, -0.03557170397423487, 4.4083821086491274e-07], [0.9107612732787644, 5.311145675050475e-09, 4.408382107100585e-07], [0.9557161681677887, 0.035571714803453995, 4.408382106558003e-07], [0.9873663671665805, 0.07114342428196711, 4.40838210651444e-07], [1.0046936337281203, 0.10671513112560016, 4.4083821064708774e-07], [1.0077665903363877, 0.14228683794164285, 4.4083821059282956e-07], [1.0063481623973087, 0.17785854478527593, 6.48873120363023e-07], [0.9870116076494587, 0.1778585447852759, -0.19307278617078577], [0.9297447162003868, 0.17785854478527588, -0.3787265340679055], [0.8367482629609422, 0.17785854478527588, -0.5498260283698712], [0.711596040533837, 0.17785854478527588, -0.6997960018495927], [0.5590975483949653, 0.17785854478527582, -0.8228732519260312], [0.38511324912330486, 0.17785854478527582, -0.9143279067120024], [0.19632928824757442, 0.1778585447852758, -0.9706454335337019], [4.951530259825022e-07, 0.1778585447852758, -0.9896616040926537], [-0.19632832786290616, 0.1778585447852758, -0.9706456108748919], [-0.3851123486701914, 0.17785854478527582, -0.9143282017796884], [-0.5590967082148969, 0.17785854478527582, -0.8228736652211771], [-0.711595321127519, 0.17785854478527588, -0.6997965333721986], [-0.8367477239753542, 0.17785854478527588, -0.5498265593915135], [-0.929744355358927, 0.17785854478527588, -0.37872700597581777], [-0.9870114277978793, 0.1778585447852759, -0.19307319911525722], [-1.0063481618281584, 0.17785854478527593, 3.2443656167322446e-07]],
                    "knot" : [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0, 49.0, 50.0, 51.0, 52.0, 53.0, 54.0, 55.0, 56.0, 57.0, 58.0, 59.0, 60.0, 61.0, 62.0, 63.0, 64.0, 65.0, 66.0, 67.0, 68.0, 69.0, 70.0, 71.0, 72.0, 73.0, 74.0, 75.0, 76.0, 77.0, 78.0, 79.0, 80.0, 81.0, 82.0, 83.0, 84.0, 85.0, 86.0, 87.0, 88.0, 89.0, 90.0, 91.0, 92.0, 93.0, 94.0]

                },
            "chaos" :
                {
                    "degree" : 1,
                    "point" : [[-0.99024690997958, 0.0, 0.0], [-0.7319216291153431, 0.0, 0.19374396064817842], [-0.7319216291153431, 0.0, 0.06458132021605943], [-0.1988144423226778, 0.0, 0.08235149019324783], [-0.563212780333061, 0.0, 0.471880964012314], [-0.6545445966538049, 0.0, 0.3805491476915676], [-0.7002102438795526, 0.0, 0.7002102438795526], [-0.3805491476915689, 0.0, 0.6545445966538067], [-0.4718809640123131, 0.0, 0.56321278033306], [-0.08235149019324732, 0.0, 0.19881444232267736], [-0.06458132021606011, 0.0, 0.7319216291153415], [-0.19374396064818053, 0.0, 0.7319216291153415], [7.012351037602103e-18, 0.0, 0.9902469099795788], [0.19374396064818053, 0.0, 0.7319216291153415], [0.06458132021606011, 0.0, 0.7319216291153415], [0.08235149019324732, 0.0, 0.19881444232267736], [0.4718809640123131, 0.0, 0.56321278033306], [0.3805491476915689, 0.0, 0.6545445966538067], [0.7002102438795526, 0.0, 0.7002102438795526], [0.6545445966538049, 0.0, 0.3805491476915676], [0.563212780333061, 0.0, 0.471880964012314], [0.1988144423226778, 0.0, 0.08235149019324783], [0.7319216291153431, 0.0, 0.06458132021605943], [0.7319216291153431, 0.0, 0.19374396064817842], [0.99024690997958, 0.0, 0.0], [0.7319216291153431, 0.0, -0.19374396064817842], [0.7319216291153431, 0.0, -0.06458132021605943], [0.1988144423226778, 0.0, -0.08235149019324783], [0.563212780333061, 0.0, -0.471880964012314], [0.6545445966538049, 0.0, -0.3805491476915676], [0.7002102438795526, 0.0, -0.7002102438795526], [0.3805491476915689, 0.0, -0.6545445966538067], [0.4718809640123131, 0.0, -0.56321278033306], [0.08235149019324732, 0.0, -0.19881444232267736], [0.06458132021606011, 0.0, -0.7319216291153415], [0.19374396064818053, 0.0, -0.7319216291153415], [7.012351037602103e-18, 0.0, -0.9902469099795788], [-0.19374396064818053, 0.0, -0.7319216291153415], [-0.06458132021606011, 0.0, -0.7319216291153415], [-0.08235149019324732, 0.0, -0.19881444232267736], [-0.4718809640123131, 0.0, -0.56321278033306], [-0.3805491476915689, 0.0, -0.6545445966538067], [-0.7002102438795526, 0.0, -0.7002102438795526], [-0.6545445966538049, 0.0, -0.3805491476915676], [-0.563212780333061, 0.0, -0.471880964012314], [-0.1988144423226778, 0.0, -0.08235149019324783], [-0.7319216291153431, 0.0, -0.06458132021605943], [-0.7319216291153431, 0.0, -0.19374396064817842], [-0.99024690997958, 0.0, 0.0]],
                    "knot" : [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0, 36.0, 37.0, 38.0, 39.0, 40.0, 41.0, 42.0, 43.0, 44.0, 45.0, 46.0, 47.0, 48.0]
                },
            "stick_cheerleader" :
                {
                    "degree" : 1,
                    "point" : [[6.627767981633751e-16, 5.120963681188427e-16, 2.0140499077909004e-15], [-0.9891628763705158, 5.120919624285667e-16, 1.9432094708397274e-15], [-1.0351868265943238, 6.908186381350806e-06, 0.11107883467598807], [-1.1462985888109287, 9.769647848490797e-06, 0.15708914588030856], [-1.2574103510275294, 6.908186381346881e-06, 0.11107883467598823], [-1.3034343012513414, 5.120919624285667e-16, 1.9432094708397274e-15], [-1.2574103510275294, -6.908186380328149e-06, -0.11107883467598378], [-1.1462985888109287, -9.769647847428887e-06, -0.15708914588030448], [-1.0351868265943238, -6.908186380328149e-06, -0.11107883467598378], [-0.9891628763705158, 5.120919624285667e-16, 1.9432094708397274e-15], [-1.0351868265943238, -6.908186380328149e-06, -0.11107883467598378], [-1.2574103510275294, 6.908186381346881e-06, 0.11107883467598823], [-1.1462985888109287, 9.769647848490797e-06, 0.15708914588030856], [-1.0351868265943238, 6.908186381350806e-06, 0.11107883467598807], [-1.2574103510275294, -6.908186380328149e-06, -0.11107883467598378], [-1.1462985888109287, -9.769647847428887e-06, -0.15708914588030448], [-1.0351868265943238, -6.908186380328149e-06, -0.11107883467598378], [-0.9891628763705158, 5.120919624285667e-16, 1.9432094708397274e-15], [6.627767981633751e-16, 5.120963681188427e-16, 2.0140499077909004e-15], [1.000578670121758, 5.120802139928087e-16, 1.7543027909494663e-15], [1.0432590142663856, 6.406311729871129e-06, 0.10300903916549864], [1.1462985888109283, 9.05989012939407e-06, 0.1456767351553553], [1.249338163355475, 6.406311729871129e-06, 0.10300903916549864], [1.292018507500103, 5.120761905933591e-16, 1.6896093247407894e-15], [1.249338163355475, -6.406311728824918e-06, -0.10300903916549388], [1.1462985888109303, -9.059890128347862e-06, -0.1456767351553511], [1.0432590142663856, -6.406311728824918e-06, -0.10300903916549388], [1.000578670121758, 1.0408249821554984e-15, 2.2140101209713337e-15], [1.0432590142663856, -6.406311728824918e-06, -0.10300903916549388], [1.249338163355475, 6.406311729871129e-06, 0.10300903916549864], [1.1462985888109283, 9.05989012939407e-06, 0.1456767351553553], [1.0432590142663856, 6.406311729871129e-06, 0.10300903916549864], [1.249338163355475, -6.406311728824918e-06, -0.10300903916549388]],
                    "knot" : [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0]
                },
            "arrow_one" :
                {
                    "degree" : 1,
                    "point" : [[-0.502579021233266, -2.279961963927631e-15, -0.2508168292397817], [-0.502579021233266, -2.33366239165553e-15, -0.21147264406341568], [-0.502578603042605, 2.2912182497236507e-15, 2.29121824972368e-15], [-0.502579021233266, -2.3426124629435126e-15, 0.21147264406342026], [-0.502579021233266, -2.3247123203675463e-15, 0.2508168292397862], [0.5016336584795679, -2.3247123203675463e-15, 0.2508168292397862], [0.5016336584795679, -2.3247123203675463e-15, 0.5016336584795702], [1.0032673169591357, -2.2912182497236803e-15, 2.29121824972368e-15], [0.5016336584795679, -2.2889120352156142e-15, -0.5016336584795656], [0.5016336584795679, -2.279961963927631e-15, -0.2508168292397817], [-0.502579021233266, -2.279961963927631e-15, -0.2508168292397817]],
                    "knot" : [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0]
                },
            "arrow_two" :
                {
                    "degree" : 1,
                    "point" : [[-1.4396521862514229, 0.0, -3.22676124012304e-15], [-1.0020704176140893, 0.0, 0.460055253487546], [-1.002070417614089, 0.0, 0.15335175116251237], [1.0020704176140895, 0.0, 0.1533517511625128], [1.0020704176140893, 0.0, 0.46005525348754656], [1.4396521862514229, 0.0, -2.5874272382717284e-15], [1.0020704176140898, 0.0, -0.4600552534875531], [1.0020704176140893, 0.0, -0.1533517511625181], [-1.0020704176140887, 0.0, -0.15335175116251856], [-1.0020704176140887, 0.0, -0.4600552534875535], [-1.4396521862514229, 0.0, -3.22676124012304e-15]],
                    "knot" : [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0]
                },
            "arrow_four" :
                {
                    "degree" : 3,
                    "point" : [[0.2940636523294337, -1.885714992730445e-15, -0.9569541469332847], [0.2940636523294337, -1.9019464875737876e-15, -1.030054301061433], [0.2940636523294337, -1.9181779824171317e-15, -1.1031544551895822], [0.2940636523294337, -1.9344094772604765e-15, -1.1762546093177313], [0.3920848697725761, -2.4921523063415673e-15, -1.1762546093177315], [0.4901060872157207, -3.0498951354226577e-15, -1.1762546093177313], [0.5881273046588652, -3.0498951354226573e-15, -1.1762546093177308], [0.3920848697725761, -2.5356824713444337e-15, -1.3722970442040197], [0.1960424348862892, -2.02146980726621e-15, -1.568339479090308], [0.0, -9.49514314106895e-16, -1.7643819139765964], [-0.1960424348862892, -3.4824132002293684e-16, -1.568339479090308], [-0.3920848697725761, 8.107745031421123e-16, -1.37229704420402], [-0.5881273046588652, 1.4120474972260704e-15, -1.1762546093177313], [-0.4901060872157207, 8.543046681449795e-16, -1.176254609317731], [-0.3920848697725761, 8.543046681449798e-16, -1.1762546093177308], [-0.2940636523294337, 2.965618390638883e-16, -1.1762546093177313], [-0.2940636523294337, 3.1345223575875145e-16, -1.1001870250566061], [-0.2940636523294337, 3.3034263245361446e-16, -1.024119440795481], [-0.28399800821854454, 3.4541011988813524e-16, -0.9562615099999638], [-0.4423522968213333, 9.13708049404353e-16, -0.908725563613468], [-0.7330697646955352, 2.06695424489972e-15, -0.7386672217504249], [-0.9045762690589154, 2.68892776260949e-15, -0.44939791637655957], [-0.9503506961958046, 3.2811617269822465e-15, -0.29406365232943277], [-1.0256520005697798, 3.2811617269822465e-15, -0.29406365232943277], [-1.1009533049437552, 3.838904556063337e-15, -0.29406365232943277], [-1.1762546093177304, 3.838904556063337e-15, -0.29406365232943277], [-1.1762546093177304, 3.817139473561903e-15, -0.392084869772577], [-1.1762546093177304, 3.79537439106047e-15, -0.4901060872157214], [-1.1762546093177304, 3.7736093085590354e-15, -0.5881273046588658], [-1.3722970442040197, 4.374882302642994e-15, -0.392084869772577], [-1.5683394790903087, 4.976155296726952e-15, -0.1960424348862886], [-1.764381913976596, 5.577428290810911e-15, -1.2723973298659235e-30], [-1.5683394790903087, 5.063215626732686e-15, 0.1960424348862884], [-1.3722970442040197, 4.549002962654464e-15, 0.392084869772577], [-1.1762546093177304, 4.034790298576239e-15, 0.5881273046588655], [-1.1762546093177304, 4.013025216074805e-15, 0.49010608721572124], [-1.1762546093177304, 3.991260133573373e-15, 0.392084869772577], [-1.1762546093177304, 3.969495051071938e-15, 0.29406365232943277], [-1.1008080519086245, 3.969495051071938e-15, 0.2940636523294328], [-1.0253614944995169, 3.411752221990847e-15, 0.2940636523294328], [-0.9531507359408645, 3.4117754721111334e-15, 0.2941683615624878], [-0.905020936842009, 2.888333876599512e-15, 0.4486473842843025], [-0.7364187661838362, 2.3938247906498784e-15, 0.7334268462883781], [-0.4524009459257182, 1.3159454533015683e-15, 0.902790658692506], [-0.2940636523294315, 7.695825268983718e-16, 0.954041184152184], [-0.2940636523294315, 7.860296242983457e-16, 1.028112325874033], [-0.2940636523294315, 8.024767216983197e-16, 1.1021834675958821], [-0.2940636523294315, 8.189238190982937e-16, 1.1762546093177313], [-0.3920848697725761, 1.3766666481793853e-15, 1.1762546093177315], [-0.4901060872157207, 1.3766666481793847e-15, 1.1762546093177313], [-0.5881273046588652, 1.9344094772604765e-15, 1.1762546093177313], [-0.3920848697725761, 1.4201968131822517e-15, 1.37229704420402], [-0.19604243488628695, 3.4824132002293684e-16, 1.568339479090308], [0.0, -1.6597134405528712e-16, 1.7643819139765964], [0.1960424348862892, -1.3249871672203366e-15, 1.568339479090308], [0.3920848697725761, -1.9262601613042946e-15, 1.37229704420402], [0.5881273046588652, -2.527533155388252e-15, 1.1762546093177313], [0.4901060872157207, -2.527533155388252e-15, 1.176254609317731], [0.3920848697725761, -1.9697903263071618e-15, 1.1762546093177297], [0.2940636523294337, -1.4120474972260704e-15, 1.1762546093177313], [0.2940636523294337, -1.42916348998049e-15, 1.0991710307268534], [0.2940636523294337, -1.446279482734909e-15, 1.022087452135975], [0.2981200009800695, -1.4618618349074859e-15, 0.9519107766980017], [0.45109105359455287, -2.0303382978879504e-15, 0.9035707870684498], [0.7363068867234419, -3.183494301497489e-15, 0.7339186333488182], [0.9053490786549206, -4.362446035369408e-15, 0.4480928384317756], [0.9497723626810867, -4.396647385144427e-15, 0.29406365232943277], [1.0252664448933013, -4.396647385144427e-15, 0.29406365232943277], [1.1007605271055159, -4.954390214225518e-15, 0.29406365232943277], [1.1762546093177304, -5.51213304330661e-15, 0.29406365232943277], [1.1762546093177304, -5.490367960805177e-15, 0.392084869772577], [1.1762546093177304, -5.4686028783037424e-15, 0.4901060872157214], [1.1762546093177304, -5.446837795802308e-15, 0.5881273046588658], [1.3722970442040197, -5.490367960805177e-15, 0.392084869772577], [1.5683394790903087, -6.091640954889134e-15, 0.1960424348862886], [1.7643819139765968, -7.250656778054184e-15, 1.553687059209584e-30], [1.5683394790903087, -6.178701284894868e-15, -0.19604243488628825], [1.3722970442040197, -5.664488620816645e-15, -0.392084869772577], [1.1762546093177304, -5.7080187858195115e-15, -0.5881273046588655], [1.1762546093177304, -5.686253703318078e-15, -0.49010608721572124], [1.1762546093177304, -5.664488620816645e-15, -0.392084869772577], [1.1762546093177304, -5.6427235383152105e-15, -0.29406365232943277], [1.1014891521419865, -5.08498070923412e-15, -0.2940636523294328], [1.0267236949662406, -4.527237880153029e-15, -0.2940636523294328], [0.9519582377904947, -4.527237880153029e-15, -0.29406365232943277], [0.9050952093403709, -4.561534504819157e-15, -0.448521918395875], [0.735051298486741, -3.5098386223341086e-15, -0.7358055283654578], [0.447574016031715, -2.4320672932468117e-15, -0.9056557667336427], [0.29243325713578516, -1.8849901263248744e-15, -0.9536896388592645]],
                    "knot" : [15.74575077, 15.74575077, 15.74575077, 15.994336930000005, 15.994336930000005, 15.994336930000005, 16.994336930000003, 16.994336930000003, 16.994336930000003, 17.994336930000003, 17.994336930000003, 17.994336930000003, 18.994336930000003, 18.994336930000003, 18.994336930000003, 19.994336930000003, 19.994336930000003, 19.994336930000003, 20.253014205, 20.253014205, 20.253014205, 20.88520212, 21.502214874, 21.502214874, 21.502214874, 21.758286319, 21.758286319, 21.758286319, 22.758286319, 22.758286319, 22.758286319, 23.758286319, 23.758286319, 23.758286319, 24.758286319, 24.758286319, 24.758286319, 25.758286319, 25.758286319, 25.758286319, 26.014851715, 26.014851715, 26.014851715, 26.633484611, 27.244006169, 27.244006169, 27.244006169, 27.495894293, 27.495894293, 27.495894293, 28.495894293, 28.495894293, 28.495894293, 29.495894293, 29.495894293, 29.495894293, 30.495894293, 30.495894293, 30.495894293, 31.495894293, 31.495894293, 31.495894293, 31.758026583, 31.758026583, 31.758026583, 32.371381249, 32.991210664, 32.991210664, 32.991210664, 33.247937674, 33.247937674, 33.247937674, 34.247937674, 34.247937674, 34.247937674, 35.247937674, 35.247937674, 35.247937674, 36.247937674, 36.247937674, 36.247937674, 37.247937674, 37.247937674, 37.247937674, 37.502186904, 37.502186904, 37.502186904, 38.1210905535, 38.742038981499995, 38.742038981499995, 38.742038981499995]
                },
            "arrow" :
                {
                    "degree" : 1,
                    "point" : [[-0.9938612544813202, -1.5066187169057973e-08, -0.0005193309384551965], [-0.7954006753352233, -1.5066187169425212e-08, -0.0005187953577834126], [-0.593185813393829, -1.506618716979939e-08, -0.0005182496455210013], [0.690538960062612, -1.506618713752363e-08, -0.0005163408089532589], [0.9938612529747036, -1.5066187138084883e-08, -0.0005155222405591955], [0.9938612529747036, -1.5066187138084883e-08, -0.0005155222405591955], [0.9938612529747036, -1.5066187138084883e-08, -0.0005155222405591955], [0.7916463895235943, -0.10110751600783016, -8.286397439822314e-09], [0.9938612544813202, -1.5066187138084883e-08, -0.0005155222405559822], [0.7916463895266906, 0.10110751600783016, -1.1299633765085374e-08], [0.7916463895235943, -0.10110751600783016, -8.286397439822314e-09], [0.9938612544813202, -1.5066187138084883e-08, -0.0005155222405559822], [0.791542476560079, -1.5066189067776405e-08, 0.1011074437769538], [0.9938612544813202, -1.5066187138084883e-08, -0.0005155222405559822], [0.791750302470077, -1.5066189067776405e-08, -0.10110744377694969], [0.791542476560079, -1.5066189067776405e-08, 0.1011074437769538], [0.7915475624189884, -0.03124395247432873, 0.09615889627478552], [0.7915623221698268, -0.059429513734581926, 0.08179763902913757], [0.7915853110212057, -0.08179770106187562, 0.05942945598211832], [0.7916142786550673, -0.09615896589217321, 0.031243909607569512], [0.7916463895235943, -0.10110751600783016, -8.286397439822314e-09], [0.7916785003905724, -0.09615895835907853, -0.031243924673747744], [0.7917074680205628, -0.08179769352878093, -0.05942946728174923], [0.791730456868072, -0.05942950996803459, -0.08179764656222366], [0.7917452166111623, -0.031243946824507842, -0.0961588962747816], [0.791750302470077, -1.5066189067776405e-08, -0.10110744377694969], [0.791745216673098, 0.031243935524866193, -0.09615895653950596], [0.7917304569222631, 0.059429509968034935, -0.08179769929385748], [0.7917074680592718, 0.08179770859497044, -0.059429504947200174], [0.7916785004079879, 0.09615896589217343, -0.031243941623202678], [0.7916463895266906, 0.10110751600783016, -1.1299633765085374e-08], [0.7916142786453921, 0.09615896589217343, 0.0312439190239339], [0.7915853110057239, 0.08179769352878134, 0.05942947104829745], [0.7915623221620822, 0.059429491135298586, 0.08179764656222865], [0.7915475624189884, 0.031243922341950614, 0.09615889627478552], [0.791542476560079, -1.5066189067776405e-08, 0.1011074437769538]],
                    "knot" : [0.0, 1.0, 2.0, 3.0, 4.0, 5.0, 6.0, 7.0, 8.0, 9.0, 10.0, 11.0, 12.0, 13.0, 14.0, 15.0, 16.0, 17.0, 18.0, 19.0, 20.0, 21.0, 22.0, 23.0, 24.0, 25.0, 26.0, 27.0, 28.0, 29.0, 30.0, 31.0, 32.0, 33.0, 34.0, 35.0]
                },
            "simple_orb" :
                {
                    "degree" : 1,
                    "point" : [(0, 1, 0), (0, 0.92388, 0.382683), (0, 0.707107, 0.707107), (0, 0.382683, 0.92388), (0, 0, 1), (0, -0.382683, 0.92388), (0, -0.707107, 0.707107), (0, -0.92388, 0.382683), (0, -1, 0), (0, -0.92388, -0.382683), (0, -0.707107, -0.707107), (0, -0.382683, -0.92388), (0, 0, -1), (0, 0.382683, -0.92388), (0, 0.707107, -0.707107), (0, 0.92388, -0.382683), (0, 1, 0), (0.382683, 0.92388, 0), (0.707107, 0.707107, 0), (0.92388, 0.382683, 0), (1, 0, 0), (0.92388, -0.382683, 0), (0.707107, -0.707107, 0), (0.382683, -0.92388, 0), (0, -1, 0), (-0.382683, -0.92388, 0), (-0.707107, -0.707107, 0), (-0.92388, -0.382683, 0), (-1, 0, 0), (-0.92388, 0.382683, 0), (-0.707107, 0.707107, 0), (-0.382683, 0.92388, 0), (0, 1, 0), (0, 0.92388, -0.382683), (0, 0.707107, -0.707107), (0, 0.382683, -0.92388), (0, 0, -1), (-0.382683, 0, -0.92388), (-0.707107, 0, -0.707107), (-0.92388, 0, -0.382683), (-1, 0, 0), (-0.92388, 0, 0.382683), (-0.707107, 0, 0.707107), (-0.382683, 0, 0.92388), (0, 0, 1), (0.382683, 0, 0.92388), (0.707107, 0, 0.707107), (0.92388, 0, 0.382683), (1, 0, 0), (0.92388, 0, -0.382683), (0.707107, 0, -0.707107), (0.382683, 0, -0.92388), (0, 0, -1)],
                    "knot" : [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52]
                }
}